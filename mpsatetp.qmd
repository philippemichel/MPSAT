---
subtitle: "Analyse statistique - V 1.0"
cache: true
---

::: {.panel-tabset}

# Introduction

**Évaluation des impacts multidimensionnels des ateliers d’éducation thérapeutique des patients (ETP) sur la gestion de la maladie, la qualité de vie, la santé mentale des patients atteints de BPCO pris en charge par la MPSAT sur le territoire NOVO**

**Investigateur coordonnateur** : Mme Anne-Charlotte TAUVERON -- Hôtel du Département du Val d’Oise – MDPH 

**Responsable scientifique** : Dr Bruno Philippe -- Service de Pneumologie, réhabilitation respiratoire & SSR Hôpital NOVO (Site Aincourt)

**Chef de projet** : Mme Mathilde WLODARCZYK

```{r}
#| label: info

 rm(list=ls())
library(baseph)
library(tidyverse)
library(kableExtra)
library(scales)
library(forestmodel)
library(gtsummary)
library(epiDisplay)
library(labelled)
library(ggstats)
library(DataExplorer)
library(xlsx)
library(lubridate)

expx <- FALSE
classeur <- "mpsatetp1.xlsx"
if (expx){system(paste0("rm -f ",classeur))}
#
theme_gtsummary_language(language = "fr", decimal.mark = ",")
options(OutDec = ",")
#
load(file = "datas/quest.RData")
# sessionInfo()
```


```{r}
#| label: macrotab

formt <- function(tabx, oui = TRUE, comp = "") {
  if (oui) {
    cpt = 'Pour les données en oui/non seul le résultat pour oui a été présenté'
  }
  else{
    cpt = ''
  }
#  cpt = paste0(cpt, ". ", comp)
  tabx |>
 modify_footnote(update = everything() ~ cpt) |>
    add_n() |>
    add_overall() |> 
    bold_labels()
}
```

```{r}
#| label: macro-item1

items1 <- function(df, deb, nlabs,exp = expx, classeur = classeur) {
nexp <- paste0(deb, "tab")
tab1 <- df |>
  dplyr::select(c(starts_with(deb))) |>
  pivot_longer(
    cols = everything(),
    names_to = "Items",
    values_to = "Réponse"
  ) |>
  mutate(Items = factor(Items, labels = bn$Nom[nlabs])) |>
  tbl_cross(row = Items, col = Réponse, margin = NULL,
            percent = "row") |>
  modify_header(label~ str_to_upper(deb)) |> 
  bold_labels() |> 
       as_kable_extra() |> 
       kable_styling(bootstrap_options = "striped", 
                     font_size = 14, 
                     fixed_thead = TRUE)
   if(exp == TRUE){
 #    tab1 |> 
 # write.xlsx(nomfich, sheetName = nexp, append = TRUE)
     }
   return(tab1)
}
```

```{r}
#| label: macro-item2

items2 <- function(df = tt, deb, nlabs, tit){
df |>
  dplyr::select(c(starts_with(deb))) |>
  rename_with(~ bn$Nom[nlabs]) |>
  gglikert() +
  labs(title = tit) +
  scale_y_discrete(labels = label_wrap(40))
}
```

```{r}
#| label: macro-item3

# Additionne les items d'un thème puis comparaison selon groupe

items3 <- function(df, deb, nomfich = classeur, nexpx = expx) {
nexp <- paste0(deb, "_tab_g")
titre <- paste0(str_to_upper(deb), " selon le groupe")
tab1 <- df |>
  rowwise() |>
  mutate(tot = sum(c_across(starts_with(deb)))) |>
  tbl_continuous( variable = tot, include = groupe) |>
  modify_caption(titre) |> 
  add_p() |> 
  bold_labels() |> 
       as_kable_extra() |> 
       kable_styling(bootstrap_options = "striped", 
                     font_size = 14, 
                     fixed_thead = TRUE) 
    if (expx) {
      tab1 |>
        as_tibble() |>
        write.xlsx(nomfich, sheetName = nexp, append = TRUE)
    }
return(tab1)
}
```

```{r}
#| label: macro-item4

# Analyse selon les groupes en linéaire. 

item4 <- function(df,deb, grp = groupe, tit1 = "",tit2 = ""){
zz <- df|>
  rowwise() |>
  mutate(tot = sum(c_across(starts_with(deb)))) |> 
  mutate(ggg = {{grp}})

ll <- lm(tot ~ ggg, data = zz)
panels <- list(
  list(width = 0.03),
  list(width = 0.1, display = ~variable, fontface = "bold", heading = tit1),
  list(width = 0.1, display = ~level, heading = tit2),
  list(width = 0.05, display = ~n, hjust = 1, heading = "n"),
  list(width = 0.03, item = "vline", hjust = 0.5),
  list(
    width = 0.55, item = "forest", hjust = 0.5, heading = "Odd Ratio", linetype = "dashed",
    line_x = 0
  ),
  list(width = 0.03, item = "vline", hjust = 0.5),
  list(width = 0.12, display = ~ ifelse(reference, "Reference", sprintf(
    "%0.2f (%0.2f, %0.2f)",
    trans(estimate), trans(conf.low), trans(conf.high)
  )), display_na = NA),
  list(
    width = 0.05,
    display = ~ ifelse(reference, "", format.pval(p.value, digits = 1, eps = 0.001)),
    display_na = NA, hjust = 1, heading = "p"
  ),
  list(width = 0.03)
)
forest_model(ll, panels)
}
```


# Description de la population

L'échantillon comporte `r nrow(tt)` cas pour `r ncol(tt)-2` variables. Il n'y a aucune donnée manquante pour les divers scores ou échelles.


## Démographie

```{r}
#| label: tbl-clinique1
#| tbl-cap: Description démographique
#| eval: true

tt |> 
  dplyr::select(c(2:14, 96:97, 102)) |> 
  tbl_summary( missing = "no",
               by = groupe,
               value = list(tabac = "Oui",
                          vaccin_grippe = "Oui",
                          vaccin_covid = "Oui",
                          vaccin_pneumocoque = "Oui"))  |>
   formt(oui = TRUE) |> 
  add_p() |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "demo") |> 
  scroll_box(width = "100%", height = "700px")
```

Les différences entre les groupes (poids, situation familiale...) semblent relever du hasard. Il était prévisible d'avoir ce type de résultat vu la petite taille de l'échantillon.

## EFR

```{r}
#| label: tbl-efr
#| tbl-cap: EFR

tt |> 
  dplyr::select(c(99:101,96)) |> 
  tbl_summary( missing = "no",
               by = groupe,
               value = list(tabac = "Oui",
                          vaccin_grippe = "Oui",
                          vaccin_covid = "Oui",
                          vaccin_pneumocoque = "Oui"))  |>
  add_p() |>
   formt(oui = FALSE) |> 
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "efr")
```

## Traitements inhalés

```{r}
#| label: tbl-inhale
#| tbl-cap: Traitements inhalés

tt |> 
  dplyr::select(c(103:105,96)) |>
  pivot_longer(cols = c(1:3), names_to = "tt", values_to = "traitement") |> 
  dplyr::select(! tt) |> 
  tbl_summary( missing = "no",
               by = groupe)  |>
   add_p() |>
   formt(oui = FALSE) |>
    pexptabph(exp = expx, nomfich = classeur, nomsheet = "inhale") 
```

# Critère principal

*L’impact global des ateliers d’ETP a été évalué à l’aide du score global du questionnaire validé en langue française*

Le score HEIQ a été divisé en plusieurs thèmes qui vont être présentés un à un avant d'analyser le score final. l'analyse linéaire avec tracé du graphique en *arbre de noël* ne sera réalisée que si une différence significative est mise en évidence. 

```{r}
#| label: num-heiq

numheiq <- tt |> 
  dplyr::select(c(starts_with("heiq"))) |> 
  mutate_all(as.numeric)
numheiq$groupe <- tt$groupe
```

## Thème HDA

```{r}
#| label: tbl-hda 
#| tbl-cap: "Thème HDA"

deb <- "heiq_hda"
lim <- 18:21

items1(tt,deb, lim)
```

```{r}
#| label: fig-heiq-hda
#| fig-cap: Score HEIQ - Thème HDA

items2(tt,deb, lim,"Score HEIQ - Thème HDA")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-hda
#| tbl-cap: Score HEIQ - Thème HDA selon le groupe

items3(numheiq, deb)
```

```{r}
#| label: fig-grheiq-hda
#| fig-cap: Score HEIQ - Thème HDA selon le groupe

item4(numheiq, deb, tit1 = "HEIQ", tit2 = "Score HDA")
```



## Thème PAEL

```{r}
#| label: tbl-pael 
#| tbl-cap: Thème PAEL

deb <- "heiq_pael"
lim <- 22:26

items1(tt,deb, lim)
```

```{r}
#| label: fig-heiq-pael
#| fig-cap: Score HEIQ - Thème PAEL

items2(tt,deb, lim, "Score HEIQ - Thème PAEL")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-pael
#| tbl-cap: Score HEIQ - Thème PAEL selon le groupe

items3(numheiq,deb)
```

```{r}
#| label: fig-grheiq-pael
#| fig-cap: Score HEIQ - Thème PAEL selon le groupe

item4(numheiq, deb, tit1 = "HEIQ", tit2 = "Score PAEL")
```




## Thème ED

```{r}
#| label: tbl-ed
#| tbl-cap: Thème ED

deb <- "heiq_ed"
lim <- 27:32

items1(tt,deb, lim)
```

```{r}
#| label: fig-heiq-ed
#| fig-cap: Score HEIQ - Thème ED

items2(tt,deb, lim, "Score HEIQ - Thème ED")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-ed
#| tbl-cap: Score HEIQ - Thème ED selon le groupe

items3(numheiq,deb)
```

## Thème SMI

```{r}
#| label: tbl-smi
#| tbl-cap: Thème SMI

deb <- "heiq_smi"
lim <- 33:38

items1(tt,deb, lim)
```

```{r}
#| label: fig-heiq-smi
#| fig-cap: Score HEIQ - Thème SMID

items2(tt, deb, lim, "Score HEIQ - Thème SMI")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-smi
#| tbl-cap: Score HEIQ - Thème SMI selon le groupe

items3(numheiq,deb)
```

## Thème CAA

```{r}
#| label: tbl-caa
#| tbl-cap: Thème CAA
deb <- "heiq_caa"
lim <- 39:43
  
items1(tt,deb, lim)

```

```{r}
#| label: fig-heiq-caa
#| fig-cap: Score HEIQ - Thème CAA

items2(tt,deb, lim, "Score HEIQ - Thème CAA")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-caa
#| tbl-cap: Score HEIQ - Thème CAA selon le groupe

items3(numheiq,deb)
```


```{r}
#| label: fig-grheiq-caa
#| fig-cap: Score HEIQ - Thème CAA selon le groupe

item4(numheiq, deb, tit1 = "HEIQ", tit2 = "Score CAA")
```


## Thème STA

```{r}
#| label: tbl-sta
#| tbl-cap: Thème STA

deb <- "heiq_sta"
lim <- 44:47

items1(tt,deb,lim)
```

```{r}
#| label: fig-heiq-sta
#| fig-cap: Score HEIQ - Thème STA

items2(tt,deb,lim,"Score HEIQ - Thème STA")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-sta
#| tbl-cap: Score HEIQ - Thème STA selon le groupe

items3(numheiq, deb)
```


```{r}
#| label: fig-grheiq-sta
#| fig-cap: Score HEIQ - Thème STA selon le groupe

item4(numheiq, deb, tit1 = "HEIQ", tit2 = "Score STA")
```


## Thème SIS

```{r}
#| label: tbl-sis
#| tbl-cap: Thème SIS

deb <- "heiq_sis"
lim <- 48:52

items1(tt,deb,lim)
```

```{r}
#| label: fig-heiq-sis
#| fig-cap: Score HEIQ - Thème SIS

items2(tt,deb,lim,"Score HEIQ - Thème SIS")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-sis
#| tbl-cap: Score HEIQ - Thème SIS selon le groupe

items3(numheiq, deb)
```

## Thème HSN

```{r}
#| label: tbl-hsn
#| tbl-cap: Thème HSN
#| 
deb <- "heiq_hsn"
lim <- 53:57

items1(tt,deb,lim)
```

```{r}
#| label: fig-heiq-hsn
#| fig-cap: Score HEIQ - Thème HSN

items2(tt,deb,lim,"Score HEIQ - Thème HSN")
```

### Comparaison entre groupes

```{r}
#| label: tbl-grheiq-hsn
#| tbl-cap: Score HEIQ - Thème HSN selon le groupe

items3(numheiq, deb)
```


## Analyse Globale

On additionne les résultats des thèmes pour obtenir le score total.

L'analyse a été faite selon trois regroupements :  

- `ETP` vs `Témoin` vs `Témoin avec RR` (trois groupes)
-  En intention de traiter : `ETP` vs `Témoin` + `Témoin avec RR`  (deux groupes)
- En per protocole : `ETP` + `Témoin avec RR` vs `Témoin` (deux groupes)

Puis on recherchera des facteurs démographiques ou autres qui pourraient entrainer des différences. 


```{r}
### Analyse sur trois groupes

#| label: tbl-heiqtot
#| tbl-cap: "Score HEIQ total - 3 groupes"

items3(numheiq, "heiq")
```

## Analyse en intention de traiter

On compare le groupe `ETP` au groupe `témoin`.

```{r}
#| label: tbl-heiqitt
#| tbl-cap: "Score HEIQ total - ITT"

## Recodage de numheiq$groupe en numheiq$inttrait
numheiq$inttrait <- numheiq$groupe %>%
  fct_recode(
    "Témoin" = "Témoin avec RR"
  )


numheiq |>
  rowwise() |>
  mutate(tot = sum(c_across(starts_with("heiq")))) |>
  tbl_continuous( variable = tot, include = inttrait) |>
  add_p() |>
  bold_labels() |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "heiq-int_trait")
```

### Analyse en per protocole

On compare les groupes ayant suivi l'ETP ( groupes `ETP` & `Témoin avec RR`) au groupe `Témoin`.

```{r}
#| label: tbl-heiqperprot
#| tbl-cap: "Score HEIQ total - ITT"

## Recodage de numheiq$groupe en numheiq$perprot
numheiq$perprot <- numheiq$groupe %>%
  fct_recode(
    "ETP" = "Témoin avec RR"
  )

numheiq |>
  rowwise() |>
  mutate(tot = sum(c_across(starts_with("heiq")))) |>
  tbl_continuous( variable = tot, include = perprot) |>
  add_p() |>
  bold_labels() |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "heiq-per_prot")
```

### Analyse des facteurs associés

```{r}
#| label: tbl-heiqassocdemo
#| tbl-cap: "Facteurs démographiques et score HEIQ"

numheiq <- numheiq |> 
rowwise() |>
  mutate(tot = sum(c_across(starts_with("heiq"))))


tt$totheiq <- numheiq$tot

tt |> 
  tbl_continuous(totheiq, include = c(2,3,6:14,97,102)) |> 
  add_p() |> 
  bold_labels() |>
    pexptabph(exp = expx, nomfich = classeur, nomsheet = "heiq_fact") |> 
  scroll_box(width = "100%", height = "700px")
```

Aucun critère démographique n'a été associé au score HEIQ & les valeurs élevées des p-values rendent illusoire d'espérer un résultat sur une analyse en régression.

# Critères secondaires

## Critère 1
*La qualité de vie des patients du groupe ETP versus ceux du groupe témoin a été évaluée à l’aide du questionnaire validé VQ11.*

```{r}
#| label: tbl-vq11
#| tbl-cap: Score VQ11
#| 
deb <- "vq11"
lim <- 58:68

items1(tt,deb,lim)
```

```{r}
#| label: fig-vq11
#| fig-cap: Score VQ11

items2(tt,deb,lim,"Score VQAA")
```

### Comparaison entre groupes

```{r}


#| label: tbl-vq11tot
#| tbl-cap: Score VQ11 vs groupe
zz <- tt |> 
  dplyr::select(c(starts_with("vq11"))) |> 
  mutate_all(as.numeric)
zz$groupe <- tt$groupe
items3(zz,deb)
rm(zz)
```

Pas de différence retrouvée pour la qualité de vie entre les groupes. 

## Critère 2
*Les niveaux d’anxiété et de dépression des patients du groupe ETP versus ceux du groupe témoin seront évalués grâce au questionnaire validé HAD*

```{r}
#| label: had-prep

zz <- tt[,70:83]

## Recodage de zz$had_1 en zz$had_1_rec
zz$had_1_rec <- zz$had_1 %>%
  fct_recode(
    "3" = "De temps en temps ",
    "0" = "Jamais",
    "2" = "Souvent "
  )

    ## Recodage de zz$had_3 en zz$had_3_rec
zz$had_3_rec <- zz$had_3 %>%
  fct_recode(
    "2" = "Oui, mais ce n’a été pas trop grave ",
    "3" = "Oui, très nettement ",
    "0" = "Pas du tout",
    "1" = "Un peu, mais cela ne m’inquiète pas "
  )

## Recodage de zz$had_2 en zz$had_2_rec
zz$had_2_rec <- zz$had_2 %>%
  fct_recode(
    "0" = "Oui, tout autant ",
    "1" = "Pas autant ",
    "2" = "Un peu seulement "
  )
## Recodage de zz$had_4 en zz$had_4_rec
zz$had_4_rec <- zz$had_4 %>%
  fct_recode(
    "0" = "Autant que par le passé ",
    "1" = "Plus autant qu’avant ",
    "3" = "Plus du tout",
    "2" = "Vraiment moins qu’avant "
  )
## Recodage de zz$had_5 en zz$had_5_rec
zz$had_5_rec <- zz$had_5 %>%
  fct_recode(
    "2" = "Assez souvent ",
    "1" = "Occasionnellement ",
    "0" = "Très occasionnellement",
    "3" = "Très souvent "
    )
## Recodage de zz$had_9 en zz$had_9_rec
zz$had_9_rec <- zz$had_9 %>%
  fct_recode(
    "2" = "Assez souvent ",
    "0" = "Jamais ",
    "1" = "Parfois ",
    "3" = "Très souvent"
  )
## Recodage de zz$had_6 en zz$had_6_rec
zz$had_6_rec <- zz$had_6 %>%
  fct_recode(
    "1" = "Assez souvent ",
    "0" = "La plupart du temps",
    "2" = "Rarement "
  )
## Recodage de zz$had_7 en zz$had_7_rec
zz$had_7_rec <- zz$had_7 %>%
  fct_recode(
    "3" = "Jamais",
    "1" = "Oui, en général ",
    "0" = "Oui, quoi qu’il arrive ",
    "2" = "Rarement "
  )
## Recodage de zz$had_8 en zz$had_8_rec
zz$had_8_rec <- zz$had_8 %>%
  fct_recode(
    "0" = "Jamais",
    "1" = "Parfois ",
    "3" = "Presque toujours ",
    "2" = "Très souvent "
  )
## Recodage de zz$had_10 en zz$had_10_rec
zz$had_10_rec <- zz$had_10 %>%
  fct_recode(
    "1" = "Il se peut que je n’y fasse plus autant attention",
    "0" = "J’y prête autant d’attention que par le passé",
    "2" = "Je n’y accorde pas autant d’attention que je devrais",
    "3" = "Plus du tout "
  )
## Recodage de zz$had_11 en zz$had_11_rec
zz$had_11_rec <- zz$had_11 %>%
  fct_recode(
    "3" = "Oui, c’a été tout à fait le cas ",
    "0" = "Pas du tout",
    "1" = "Pas tellement",
    "1" = "Pas tellement ",
    "2" = "Un peu",
    "2" = "Un peu "
  )
## Recodage de zz$had_12 en zz$had_12_rec
zz$had_12_rec <- zz$had_12 %>%
  fct_recode(
    "0" = "Autant qu’avant ",
    "2" = "Bien moins qu’avant ",
    "1" = "Un peu moins qu’avant "
  )
## Recodage de zz$had_13 en zz$had_13_rec
zz$had_13_rec <- zz$had_13 %>%
  fct_recode(
    "2" = "Assez souvent ",
    "0" = "Jamais",
    "1" = "Pas très souvent ",
    "3" = "Vraiment très souvent "
  )
## Recodage de zz$had_14 en zz$had_14_rec
zz$had_14_rec <- zz$had_14 %>%
  fct_recode(
    "1" = "Parfois ",
    "2" = "Rarement ",
    "0" = "Souvent "
  )
#
had <- zz %>%
  dplyr::select(ends_with("rec")) %>%
  mutate_all(as.character) |>
  mutate_all(as.numeric) |>
#
rowwise() %>%
  mutate(hadA = sum(across(c(1,3,5,7,9,11,13)))) |>
mutate(Anxiété = cut(hadA,
  right = FALSE,
  dig.lab = 4,
  breaks = c(0, 8,11, 15),
  labels = c("absence de symptomatologie", "symptomatologie douteuse ", "symptomatologie certaine"))
) |> 
  mutate(hadD = sum(across(c(2,4,6,8,10,12,14)))) |> 
    mutate(Dépression = cut(hadD,
                         right = FALSE,
                         dig.lab = 4,
                         breaks = c(0, 8,11, 15),
                         labels = c("absence de symptomatologie", "symptomatologie douteuse ", "symptomatologie certaine"))
    )

had$groupe <- tt$groupe
```

```{r}
#| label: tbl-had-anx
#| tbl-cap: "Score d'anxiété (HAD) par groupe"

tbl_cross(had, groupe, Anxiété, percent = "row", margin = "row") %>%
add_p() %>%
bold_labels() |> 
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "had-anx")
```

```{r}
#| label: tbl-had-dep
#| tbl-cap: "Score de dépression (HAD) par groupe"

tbl_cross(had, groupe, Dépression, percent = "row", margin = "row") %>%
add_p() %>%
bold_labels() |> 
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "had-dep")
```

## Critère 3
*La motivation envers l'activité physique pratiquée durant les temps libres a été évaluée par le questionnaire BREQ-2 version courte.*

```{r}
#| label: tbl-breq-2
#| tbl-cap: Score BREQ 2
#| 
deb <- "breq"
lim <- 83:88

items1(tt,deb,lim)
```

```{r}
#| label: fig-breq-2
#| fig-cap: Score BREQ 2

items2(tt,deb,lim,"Score BREQ 2")
```

### Comparaison entre groupes

```{r}


#| label: tbl-breq-2tot
#| tbl-cap: Score BREQ 2 vs groupe
zz <- tt |> 
  dplyr::select(c(starts_with(deb))) |> 
  mutate_all(as.numeric)
zz$groupe <- tt$groupe
items3(zz,deb)
rm(zz)
```

Pas de différence retrouvée pour la qualité de vie entre les groupes. 

## Critère 4
*Comparer le nombre d’hospitalisations pour exacerbations de la BPCO des patients du groupe ETP versus ceux du groupe témoin.*
```{r}
#| label: dateinit
#
hnovo <- dd |> 
  count(date_hosp_1_novo)
hnovo <- pull(hnovo[2,2])

hhors <- date_hosp_1_hors <- dd |> 
  count(date_hosp_1_hors)
hhors <- pull(hhors[2,2])

```

On ne prend en compte que les patients ayant été hospitalisé dans l'année qui suit leur inclusion dans l'étude, cette dernière définie comme : 

- Pour les patients suivis en MPSAT-ETP, la date de début du suivi,
- Pour les témoins le 31/07/2021.

On ne retrouve alors que deux patients, un hospitalisé sur NOVO, un hospitalisé hors NOVO. Vu ce très faible nombre aucun calcul ou présentation ne peut être fait.

## Critère 5
*La perception et le ressenti des patients du groupe ETP versus ceux du groupe témoin concernant ces ateliers seront évalués grâce à un questionnaire sur le suivi et la satisfaction des patients*

```{r}
#| label: tbl-satisf
#| tbl-cap: questionnaire de satisfaction

tt |> 
  dplyr::select(c(90:96)) |> 
  tbl_summary( missing = "no",
               by = groupe,
               value = list(satisfaction_1 = "Oui",
                          satisfaction_4 = "Oui",
                          satisfaction_5 = "Oui",
                          satisfaction_6 = "Oui")) |>
   formt(oui = TRUE) |> 
  add_p() |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "demo") |> 
  scroll_box(width = "100%", height = "700px")
```

# Technique {.appendix}


Le risque $\alpha$ retenu a été de 0,05 & la puissance de 0,8.

Toutes les variables sont discrètes & sont présentées en nombre avec le pourcentage. L'intervalle de confiance (à 95 %) a été calculé par bootstrap (package `boot` [@boot]). Le test du $\chi^2$ de \textsc{Spearman} pourra être utilisé sous réserve d'un effectif suffisant, à défaut le test exact de \textsc{Fischer} pour comparer des items d'un même questionnaire entre eux. Les comparaisons entre les deux groupes seront réalisées après transformation en nombre des résultats des questionnaires (validé pour le \textsc{heiq} en prenant la moyenne par thème). Les comparaisons seront alors réalisées par un test t de Student après vérification des conditions d'application. À défaut un test non paramétrique de Wilcoxon a été utilisé.

Des graphiques seront réalisés pour les résultats importants (package `ggplot2` [@ggplot]).

## Taille de l'échantillon

```{r}
#| label: taille

moy1 <- 2.96
dif <- 0.1
moy2 <- moy1 * (1 + dif)
et <- mean(c(0.54, .76, .51, .47, .39, .42, .53, .63))
nn <- n.for.2means(moy1, moy2, et, et)
nb <- nn$n1
```

Le critère principal porte sur la comparaison du résultat chiffré du score \textsc{heiq} entre le groupe interventionnel & le groupe témoin. Une étude de validation de la version française de ce score \marginnote{Validation française du health education impact questionnaire (\textsc{heiq}) auprès d’une clientèle avec maladies chroniques en soins de première ligne -- Anne BÉLANGER (Université du Québec à Chicoutimi 2015)} retrouve sur un échantillon de près de 300 cas un résultat global à `r moy1` ± `r round(et,2)`. En estimant qu'une différence de 10 % de ce score entre les deux groupes a une signification clinique & que les deux groupes gardent le même écart-type, on peut estimé l'effectif nécessaire à **`r nb` cas** utilisables par groupe soit un minimum de `r ceiling(nb* 1.1)` cas à inclure au total.

## Données manquantes & contrôle qualité

Un décompte des données manquantes a été réalisé. Les variables comportant trop de données manquantes ou non utilisables ne seront pas prises en compte après validation par le promoteur en particulier les scores \textsc{heiq} incomplets.

## Description de la population

Les données démographiques seront présentés. Des comparaisons entre les deux groupes seront réalisées pour rechercher une éventuelle différence.



## Objectif principal

Chaque item est une échelle de Likert à quatre niveau. celles-ci sont regroupés en thèmes. Pour chaque thème les résultats de chaque item sont présentés. Une comparaison entre les groupes n'est faite que paour chaque thème. Aucun test ne a été réalisé à ce stade.

On calcule pour chaque thème la médiane & les quartiles des items après avoir transformé le résultat de chaque item en valeur numérique (de 1 à 4) & en additionnant les valeurs pour chaque thème (précédure validée pour ce score) puis comparées par des tests t de \textsc{Student}. Une comparaison globale sur le score total a été présentée. Une présentation graphique a été réalisée (package `ggstats`[@ggstats]).

Un nombre important de patients du groupe témoin ont plus ou moins suivis des ateliers d'ETP. Une analyse de sous-groupe a été réalisée pour comparer les résultats des patients vierges d'ETP avec ceux ayant déjà suivi des ateliers. L'analyse a donc été réalisée selon trois scénarios : 

- en `intention de traiter` : ETP vs témoin.
- en `per protocole` : ETP et témoins ayant déjà suivi un  d'ETP vs témoins vierges d'ETP.
- une analyse entre les trois groupes : ETP vs témoins ayant déjà suivi un  d'ETP vs témoins vierges d'ETP. Un test de Kruskal-Wallis a alors été utilisé.

Une recherche de facteurs pouvant influer la réponse aux ateliers (âge, gravité de la maladie\dots) a été réalisée tout d'abord une analyse simple avec des tests item par item a été présentée dans un tableau. Cette analyse a été réalisée uniquement sur le score total pour ne pas multiplier les tests.

## Objectifs secondaires

Toutes les analyses reposants sur des scores ou échelles ont été réalisées de la même manière : présentation des résultats item par item puis comparaison entre les groupes en utilisant le score global.

Pour l'étude des hospitalisations une comparaison simple a été faite sur le nombre d'hospitalisation pendant la première année entre les groupes & présentée par un Odd-Ratio (package `epiDisplay` [@epid]). Si la répartition du nombre d'hospitalisations a été très asymétrique (en particulier s'il y a beaucoup de patients n'ayant pas été hospitalisés) ce nombre a été discrétisé en deux ou trois classes puis les effectifs comparés par un test du $\chi^2$ ou de Fischer.

Une analyse de la durée de séjour a été réalisée sur le même principe. On analyse aussi le lieu de séjour (SSR  vs service de court séjour en première intention) & la durée totale d'hospitalisation sur un an. Une comparaison a été réalisée par un test de \textsc{Wilcoxon}.

L'analyse statistique a été réalisée avec le logiciel **R** [@rstat] & divers packages en particulier `tidyverse` [@tidy] & `baseph` [@baseph].

## Import

```{r}
#| label: import

importph <- function(){
rm(list=ls())
library(readODS)
library(tidyverse)
library(janitor)
library(baseph)
library(labelled)
#
nan <- c("NA","ND",""," ", "Manquant")

mp <- read_ods("datas/MPSAT.ods", sheet = "mpsat", na = nan) |>
  janitor::clean_names() |>
  dplyr::mutate_if(is.character, as.factor)
bn <- read_ods("datas/MPSAT.ods", sheet = "bnom")
var_label(mp) <- bn$nom
mp <- mp |>
  dplyr::select(1,2,11:20)
#
tt <- read_ods("datas/questions.ods", sheet = "quest",na = nan) |>
  janitor::clean_names() |>
  dplyr::mutate_if(is.character, as.factor)
bn <- read_ods("datas/questions.ods", sheet = "noms")
var_label(tt) <- bn$Nom
  #BMI
tt <- tt |>
  mutate(bmi = 10000*poids/taille^2) |>
  mutate(bmi = baseph::bmiph(bmi,"fr")) |>
  relocate(bmi, .after = "taille") |>
# HEIQ
mutate(across(starts_with("heiq"), function(x) factor(x,
   c( "En accord", "Fortement en accord", "En désaccord", "Fortement en désaccord"
  )))) |>
mutate(across(starts_with("heiq"), function(x) fct_relevel(x,
                                                               "Fortement en désaccord","En désaccord", "En accord", "Fortement en accord"))) |>
  mutate(across(starts_with("vq11"), function(x) factor(x,levels(tt$vq11_3)))) |>
  mutate(across(starts_with("vq11"), function(x) fct_relevel(x,
 "Pas du tout","Un peu", "Moyennement", "Beaucoup","Extrêmement"))) |>
  #VQ11
  mutate(across(starts_with("vq11"), function(x) factor(x,levels(tt$vq11_3)))) |>
  mutate(across(starts_with("vq11"), function(x) fct_relevel(x,
 "Pas du tout", "Un peu", "Moyennement", "Beaucoup"))) |>
  ## Réordonnancement de tt$breq_2_1
  mutate(across(starts_with("breq"), function(x) fct_relevel(x,
    "Pas vrai du tout", "Moyennement vrai", "Tout à fait vrai"))) |>
## Réordonnancement de tt$satisfaction_2
mutate(satisfaction_2 = fct_relevel(satisfaction_2,
    "Dans la journée", "En 24 heures", "En 48 heures", "En 1 semaine",
    "Plus"))
#
tt <- left_join(tt, mp, by = "id")
#
dd <- read_ods("datas/MPSAT-ETP_dates.ods") |>
  clean_names() |>
  mutate(across(starts_with("date"),mdy )) |>
  mutate(across(starts_with("date_hosp"), function(x) as.numeric(x - date_integration))) |>
  mutate(across(starts_with("date_hosp"), function(x) as.factor(ifelse((x>365 | x<0),"non","oui"))))
#

save(tt, bn, dd, file = "datas/quest.RData")
}
```

:::
